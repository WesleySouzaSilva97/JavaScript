# Lógica de programação

# Photshop

# front-end
- HTML5 e CSS3
- UX UI
- JavaScript
- Frameworks (bootstrap)
- CMS (wordpress)

# banco de dados

# sistemas desktop
electron

# back-end (Java ou php)

# testes

# pi
___________________________________
Lógica de programação
- variáveis
- operadores
- algorítmo
- estruturas de controle
- POO
- estruturas de dados
 
---
 
GIT e GITHUB
 
Comandos básicos do git:
git config --global user.name "Seu nome"
git config --global user.email "seuemail@email.com"
git clone url_do_repositório
git status (verificar o status do repositório local)
git add . (adiciona ao repositório local)
git commit -m "Tutorial" (Documentar as alterações)
git push (Enviar ao repositório GitHub)
git pull (sincroniza as informações do repositório) no PC
 
Gerar token GitHub
1) Settings
2) Developer Settings
3) Token classic
4) Gerar o token selecionando tudo, guardar o token
_____________________________________________________
Boas práticas na programação 
1) Cabeçalhoo de documentação (tudo isso é só para documentação)
/**
    Nome do projeto
    Descrição da classe / função
    @author Professor José de Assis
    @version 1.0 
*/

2   Nomes de arquivos, variáveis, funções, classes, etc
Regras (clean code)
- Declarar nomes que tenham relação com o problema 
- Não usar espaço, "ç", acentos e caracteres especiais para declarações de nomes (erros internos no programa)
- Só classes iniciam com letra maiúscula
- Não iniciar um nome com número
- Quando for declarar dois nome usar a técnica do camelo (camel case) 
Exemplo
nomecliente -> comeCliente
_______________________________________________________________________________________________________________________
Comandos básicos do MS-DOS (CMD)
cls -> limpar a tela
dir -> listar arquivos e diretórios
cd nome_diretório -> entrar no diretórios
cd .. -> voltar para o diretório anterior  

_______________________________________________________
Node - Plataforma que permite a execução do JavaScript fora do navegador (browser)
https://nodejs.org/pt (baixar sempre a versão LTS)

Comandos básicos
node -v

Gerenciador de pacote para o node 
npm está relacionado a pasta do projeto ou seja os pacotes são instalados na raiz do projeto e não no sistema operacional 

https://www.npmjs.com/  (gerenciador de pacotes para node)
npm -v (versão do npm)
npm ls (listar pacotes instalados)
npm init (iniciar um novo projeto JavaScript)
    |____ package.jason

json (JavaScript Object Notation)

_____________________________________________________

Variaveis e Constante

Uma variável é um espaço na memória do computador onde armazenamos dados que podem ser utilizados e modificados durante a execução de um programa. O nome "variável" vem do fato de que o valor armazenado pode variar ao longo do tempo, conforme o programa roda.

Por que usar variáveis?
Para guardar informações que você vai precisar mais tarde.
Para realizar cálculos ou tomar decisões baseadas em diferentes valores.

Uma constante é como uma variável, mas com uma diferença importante: uma vez que você define o valor de uma constante, ele não pode ser alterado durante a execução do programa.

Por que usar constantes?
Segurança: Se você sabe que um valor não deve ser alterado em seu programa, usar uma constante evita erros.
Legibilidade: Quando você usa uma constante, deixa claro para quem está lendo o código que aquele valor é fixo e importante.
Boas práticas: Em muitos casos, é recomendado usar constantes sempre que possível para valores que não precisam mudar, facilitando a manutenção do código.


Nas linguagens de programação as variáveis são estáticas ou dinamicamente

Exitem três tipos de variáveis?
String -> armazena caracteres e números
Number -> armazena números inteiros e não inteiros
Boolean -> true | false

_______________________________________________________________________________________________________________________

Comandos JavaScript (Sintaxe)
console.log() -> escrever no console
console.clear() -> Limpar a tela do console
const -> criar(declarar) uma constante
let -> criar(declarar) uma variável
typeof() -> verificar o tipo de variável
